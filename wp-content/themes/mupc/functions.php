<?php

add_theme_support('post-thumbnails');
if (function_exists('acf_add_options_page')) {

	acf_add_options_page(array(
		'page_title' 	=> 'Theme General Settings',
		'menu_title'	=> 'Theme Settings',
		'menu_slug' 	=> 'theme-general-settings',
		'capability'	=> 'edit_posts',
		'redirect'		=> false
	));
}

function get_language_shortcode()
{
	return apply_filters('wpml_current_language', null);
}
add_shortcode('language', 'get_language_shortcode');

function wpse_136058_debug_admin_menu()
{

	echo '<pre>' . print_r($GLOBALS['menu'], TRUE) . '</pre>';
}

add_action('admin_enqueue_scripts', 'ds_admin_theme_style');
add_action('login_enqueue_scripts', 'ds_admin_theme_style');
function ds_admin_theme_style()
{
	if (!current_user_can('manage_options')) {
		echo '
		
		<style>
		#wpseo-dashboard-overview { display: none; }
		.wrap .error { display: none; }
		.update-nag.notice.notice-warning.inline {
			display: none;
		}

		
		</style>';
	}
}

function remove_menu()
{

	if (!is_super_admin()) {
		remove_menu_page('vc-welcome');
		remove_menu_page('wpseo_redirects');
		remove_menu_page('cptui_main_menu');
		remove_menu_page('edit-comments.php');
		//remove_menu_page('edit.php?post_type=page');
		remove_menu_page('themes.php');
		remove_menu_page('plugins.php');
		remove_menu_page('tools.php');
		remove_menu_page('edit.php?post_type=acf-field-group');
	}
}




function hk_remove_dashboard_widgets()
{
	global $wp_meta_boxes;

	remove_meta_box('dashboard_primary', 'dashboard', 'side'); // WordPress.com Blog
	remove_meta_box('dashboard_plugins', 'dashboard', 'normal'); // Plugins
	remove_meta_box('dashboard_right_now', 'dashboard', 'normal'); // Tin nhanh
	remove_action('welcome_panel', 'wp_welcome_panel'); // Welcome Panel
	remove_action('try_gutenberg_panel', 'wp_try_gutenberg_panel'); // Gi·ªõi thi·ªáu Gutenberg
	remove_meta_box('dashboard_quick_press', 'dashboard', 'side'); // B·∫£n nh√°p
	remove_meta_box('dashboard_recent_drafts', 'dashboard', 'side'); // B·∫£n nh√°p g·∫ßn ƒë√¢y
	remove_meta_box('dashboard_secondary', 'dashboard', 'side'); // WordPress News
	remove_meta_box('dashboard_recent_comments', 'dashboard', 'normal'); // B√¨nh lu·∫≠n
	remove_meta_box('dashboard_activity', 'dashboard', 'normal'); // Ho·∫°t ƒë·ªông

	unset($wp_meta_boxes['dashboard']['normal']['core']['dashboard_site_health']); // T√¨nh tr·∫°ng website
}
add_action('wp_dashboard_setup', 'hk_remove_dashboard_widgets');
add_action('admin_menu', 'remove_menu');



function hk_welcome_dashboard()
{
	global $wp_meta_boxes;
	wp_add_dashboard_widget('custom_support_widget', 'Dashboard', 'hk_dashboard_content');
}

// Hook x·ª≠ l√Ω form ƒëƒÉng k√Ω
add_action('admin_post_nopriv_custom_register_action', 'custom_register_user');

function custom_register_user()
{
	// global $wpdb; // K·∫øt n·ªëi database c·ªßa WordPress

	// Ki·ªÉm tra n·∫øu form ƒë∆∞·ª£c g·ª≠i ƒë√∫ng c√°ch
	if ($_SERVER['REQUEST_METHOD'] !== 'POST' || !isset($_POST['action']) || $_POST['action'] !== 'custom_register_action') {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// Ki·ªÉm tra nonce ƒë·ªÉ tr√°nh CSRF
	if (!isset($_POST['_wpnonce']) || !wp_verify_nonce($_POST['_wpnonce'], 'custom_register_action')) {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// L·∫•y d·ªØ li·ªáu t·ª´ form
	$username   = sanitize_user($_POST['username']);
	$password   = $_POST['password'];
	$re_password = $_POST['re_password'];
	$email      = sanitize_email($_POST['email']);
	$phone      = sanitize_text_field($_POST['phone']);
	$pw2		= sanitize_text_field($_POST['pw2']);

	// Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
	if (empty($username) || empty($password) || empty($re_password) || empty($email) || empty($phone)) {
		wp_die('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.');
	}

	// Ki·ªÉm tra username ƒë√£ t·ªìn t·∫°i ch∆∞a
	if (username_exists($username)) {
		wp_die('T√™n t√†i kho·∫£n ƒë√£ t·ªìn t·∫°i. Vui l√≤ng ch·ªçn t√™n kh√°c.');
	}
	if (email_exists($email)) {
		wp_die('Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng. Vui l√≤ng ch·ªçn email kh√°c.');
	}
	$existing_phone = get_users([
		'meta_key'   => 'phone',
		'meta_value' => $phone,
		'number'     => 1,
	]);
	if (!empty($existing_phone)) {
		wp_die('S·ªë ƒëi·ªán tho·∫°i ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong WordPress.');
	}

	// Ki·ªÉm tra m·∫≠t kh·∫©u nh·∫≠p l·∫°i
	if ($password !== $re_password) {
		wp_die('M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp.');
	}

	// Ki·ªÉm tra ƒë·ªô d√†i username
	if (!preg_match('/^[a-zA-Z0-9]{6,20}$/', $username)) {
		wp_die('T√™n t√†i kho·∫£n kh√¥ng h·ª£p l·ªá.');
	}

	// Ki·ªÉm tra s·ªë ƒëi·ªán tho·∫°i
	if (!preg_match('/^[0-9]{10,12}$/', $phone)) {
		wp_die('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá.');
	}
	if (!preg_match('/^[0-9]{1,6}$/', $pw2)) {
		wp_die('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá.');
	}
	// session_start(); // ƒê·∫£m b·∫£o session ƒë∆∞·ª£c kh·ªüi ƒë·ªông

	if (!isset($_SESSION['captcha_code'])) {
		wp_die('L·ªói session, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// √âp ki·ªÉu $_POST['captcha'] v·ªÅ integer ƒë·ªÉ so s√°nh ƒë√∫ng
	if ((int)$_POST['captcha'] !== $_SESSION['captcha_code']) {
		wp_die('M√£ CAPTCHA kh√¥ng ch√≠nh x√°c.');
	}


	// X√≥a CAPTCHA sau khi ki·ªÉm tra ƒë·ªÉ tr√°nh spam
	unset($_SESSION['captcha_code']);


	// T·∫°o user m·ªõi tr√™n WordPress
	$user_id = wp_create_user($username, $password, $email);
	if (is_wp_error($user_id)) {
		wp_die('C√≥ l·ªói x·∫£y ra khi t·∫°o t√†i kho·∫£n.');
	}

	// Th√™m s·ªë ƒëi·ªán tho·∫°i v√†o user meta
	update_user_meta($user_id, 'phone', $phone);

	// üî• **K·∫øt n·ªëi database c·ªßa h·ªá th·ªëng game MU ho·∫∑c h·ªá th·ªëng kh√°c**
	$db_host = '127.0.0.1'; // Thay ƒë·ªïi n·∫øu c·∫ßn
	$db_name = 'dbaccount'; // T√™n database c·ªßa b·∫£ng `db_account`
	$db_user = 'root'; // User DB
	$db_pass = '123123aB'; // M·∫≠t kh·∫©u DB

	$mysqli = new mysqli($db_host, $db_user, $db_pass, $db_name);

	if ($mysqli->connect_error) {
		wp_die('L·ªói k·∫øt n·ªëi database game.');
	}

	// Hash m·∫≠t kh·∫©u n·∫øu h·ªá th·ªëng MU c·∫ßn m√£ h√≥a
	$hashed_password = md5($password); // N·∫øu h·ªá th·ªëng game s·ª≠ d·ª•ng MD5, thay b·∫±ng bcrypt n·∫øu c·∫ßn

	// Ch√®n user v√†o b·∫£ng `db_account`
	$stmt = $mysqli->prepare("INSERT INTO t_account (name, pwd, pw2) VALUES (?, ?, ?)");
	$stmt->bind_param("sss", $username, $hashed_password, $pw2);

	if (!$stmt->execute()) {
		wp_die('L·ªói khi t·∫°o t√†i kho·∫£n trong h·ªá th·ªëng game.');
	}

	// ƒê√≥ng k·∫øt n·ªëi
	$stmt->close();
	$mysqli->close();

	// ƒêƒÉng nh·∫≠p ngay sau khi ƒëƒÉng k√Ω
	$creds = [
		'user_login'    => $username,
		'user_password' => $password,
		'remember'      => true,
	];
	$user = wp_signon($creds, false);
	if (is_wp_error($user)) {
		wp_die('ƒêƒÉng nh·∫≠p t·ª± ƒë·ªông th·∫•t b·∫°i.');
	}

	// Chuy·ªÉn h∆∞·ªõng sau khi ƒëƒÉng k√Ω th√†nh c√¥ng
	wp_redirect(home_url('/'));
	exit;
}

// G√°n h√†m x·ª≠ l√Ω v√†o admin-post.php
add_action('admin_post_nopriv_custom_register_action', 'custom_register_user');



function custom_login_user()
{
	// Ki·ªÉm tra ph∆∞∆°ng th·ª©c g·ª≠i d·ªØ li·ªáu v√† action
	if ($_SERVER['REQUEST_METHOD'] !== 'POST' || !isset($_POST['action']) || $_POST['action'] !== 'custom_login_action') {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// Ki·ªÉm tra nonce ƒë·ªÉ b·∫£o v·ªá form kh·ªèi CSRF
	if (!isset($_POST['_wpnonce']) || !wp_verify_nonce($_POST['_wpnonce'], 'custom_login_action')) {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// L·∫•y d·ªØ li·ªáu t·ª´ form v√† l√†m s·∫°ch d·ªØ li·ªáu ƒë·∫ßu v√†o
	$username = sanitize_user($_POST['username']);
	$password = $_POST['password'];

	if (empty($username) || empty($password)) {
		wp_die('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin ƒëƒÉng nh·∫≠p.');
	}
	if ((int)$_POST['captcha'] !== $_SESSION['captcha_code']) {
		wp_die('M√£ CAPTCHA kh√¥ng ch√≠nh x√°c.');
	}

	// X√≥a CAPTCHA sau khi ki·ªÉm tra ƒë·ªÉ tr√°nh spam
	unset($_SESSION['captcha_code']);

	// T·∫°o m·∫£ng d·ªØ li·ªáu ƒëƒÉng nh·∫≠p cho wp_signon()
	$creds = array(
		'user_login'    => $username,
		'user_password' => $password,
		'remember'      => isset($_POST['remember']) ? true : false,
	);

	// X√°c th·ª±c ng∆∞·ªùi d√πng b·∫±ng wp_signon()
	$user = wp_signon($creds, false);
	if (is_wp_error($user)) {
		wp_die('ƒêƒÉng nh·∫≠p th·∫•t b·∫°i: ' . $user->get_error_message());
	}

	// Ki·ªÉm tra quy·ªÅn c·ªßa ng∆∞·ªùi d√πng ƒë·ªÉ chuy·ªÉn h∆∞·ªõng ph√π h·ª£p:
	// N·∫øu l√† qu·∫£n tr·ªã vi√™n (administrator) => chuy·ªÉn v·ªÅ Dashboard admin
	// Ng∆∞·ª£c l·∫°i => chuy·ªÉn v·ªÅ trang ch·ªß "/"
	if (in_array('administrator', (array)$user->roles)) {
		wp_redirect(admin_url());
	} else {
		wp_redirect(home_url('/'));
	}
	exit;
}

// Hook x·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p
add_action('admin_post_nopriv_custom_login_action', 'custom_login_user');
// N·∫øu c·∫ßn x·ª≠ l√Ω cho ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p c≈©ng c√≥ th·ªÉ d√πng hook n√†y:
add_action('admin_post_custom_login_action', 'custom_login_user');


function get_current_user_info()
{
	if (!is_user_logged_in()) {
		return false;
	}

	// L·∫•y object WP_User
	$current_user = wp_get_current_user();

	// N·∫øu c√≥ l·ªói ho·∫∑c user = 0, tr·∫£ v·ªÅ false
	if (!$current_user || 0 === $current_user->ID) {
		return false;
	}

	// Chu·∫©n b·ªã m·∫£ng th√¥ng tin
	$user_info = array(
		'username'      => $current_user->user_login,
		'email'         => $current_user->user_email,
		'display_name'  => $current_user->display_name,
	);

	// L·∫•y user meta phone (n·∫øu b·∫°n c√≥ tr∆∞·ªùng phone)
	$phone = get_user_meta($current_user->ID, 'phone', true);
	if (!empty($phone)) {
		$user_info['phone'] = $phone;
	}

	// B·∫°n c√≥ th·ªÉ th√™m c√°c tr∆∞·ªùng kh√°c, v√≠ d·ª• address, ...
	// $user_info['address'] = get_user_meta(...);

	return $user_info;
}

/**
 * H√†m x·ª≠ l√Ω ƒë·ªïi m·∫≠t kh·∫©u cho user ƒëang ƒëƒÉng nh·∫≠p.
 */
function handle_change_password()
{
	// Ch·ªâ x·ª≠ l√Ω khi form ƒë∆∞·ª£c g·ª≠i b·∫±ng POST v√† action = change_password_action
	if ($_SERVER['REQUEST_METHOD'] !== 'POST' || !isset($_POST['action']) || $_POST['action'] !== 'change_password_action') {
		wp_die('L·ªói b·∫£o m·∫≠t ho·∫∑c sai ph∆∞∆°ng th·ª©c g·ª≠i d·ªØ li·ªáu.');
	}

	// Ki·ªÉm tra nonce ƒë·ªÉ tr√°nh CSRF
	if (!isset($_POST['_wpnonce']) || !wp_verify_nonce($_POST['_wpnonce'], 'change_password_action')) {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// Ki·ªÉm tra user ƒë√£ ƒëƒÉng nh·∫≠p
	if (!is_user_logged_in()) {
		wp_die('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc.');
	}

	// L·∫•y user hi·ªán t·∫°i
	$current_user = wp_get_current_user();
	if (!$current_user || 0 === $current_user->ID) {
		wp_die('Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.');
	}

	// L·∫•y d·ªØ li·ªáu t·ª´ form
	$old_password    = isset($_POST['old_password']) ? $_POST['old_password'] : '';
	$new_password    = isset($_POST['new_password']) ? $_POST['new_password'] : '';
	$re_new_password = isset($_POST['re_new_password']) ? $_POST['re_new_password'] : '';

	// Ki·ªÉm tra d·ªØ li·ªáu
	if (empty($old_password) || empty($new_password) || empty($re_new_password)) {
		wp_die('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng.');
	}

	if ($new_password !== $re_new_password) {
		wp_die('M·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n m·∫≠t kh·∫©u kh√¥ng kh·ªõp.');
	}

	// X√°c minh m·∫≠t kh·∫©u c≈©
	// L·∫•y hash c·ªßa m·∫≠t kh·∫©u c≈© t·ª´ database
	$hash = $current_user->user_pass;
	// D√πng wp_check_password ƒë·ªÉ x√°c th·ª±c
	if (!wp_check_password($old_password, $hash, $current_user->ID)) {
		wp_die('M·∫≠t kh·∫©u c≈© kh√¥ng ch√≠nh x√°c.');
	}

	$updated_user_id = wp_update_user(array(
		'ID'        => $current_user->ID,
		'user_pass' => $new_password
	));

	if (is_wp_error($updated_user_id)) {
		wp_die('C√≥ l·ªói x·∫£y ra khi ƒë·ªïi m·∫≠t kh·∫©u: ' . $updated_user_id->get_error_message());
	}

	// Th√†nh c√¥ng: Chuy·ªÉn h∆∞·ªõng ho·∫∑c hi·ªÉn th·ªã th√¥ng b√°o
	wp_redirect(home_url('/?password_changed=1'));
	exit;
}

// G·∫Øn h√†m x·ª≠ l√Ω v√†o admin-post
add_action('admin_post_nopriv_change_password_action', 'handle_change_password'); // N·∫øu user ch∆∞a login
add_action('admin_post_change_password_action', 'handle_change_password');       // N·∫øu user ƒë√£ login

/**
 * G·ª≠i link x√°c minh email cho user ƒëang ƒëƒÉng nh·∫≠p
 */ function handle_send_verification_link()
{
	if (
		!isset($_POST['send_verification_link_nonce']) ||
		!wp_verify_nonce($_POST['send_verification_link_nonce'], 'send_verification_link_action')
	) {
		wp_die('L·ªói b·∫£o m·∫≠t! Vui l√≤ng th·ª≠ l·∫°i.');
	}

	$user = wp_get_current_user();
	$email = $user->user_email;
	$username = $user->user_login;

	// T·∫°o m√£ x√°c th·ª±c
	$verification_code = wp_generate_password(32, false);
	update_user_meta($user->ID, 'email_verification_code', $verification_code);

	$verification_link = site_url("/verify-email?code=$verification_code&user={$user->ID}");

	$subject = "X√°c minh email c·ªßa b·∫°n";
	$message = "Ch√†o b·∫°n $username,\n\nB·∫°n ho·∫∑c ai ƒë√≥ ƒë√£ y√™u c·∫ßu x√°c minh email t·∫°i " . site_url() . "\n\nƒê·ªÉ x√°c minh email, nh·∫•p v√†o link sau:\n\n$verification_link\n\nN·∫øu kh√¥ng ph·∫£i b·∫°n, h√£y b·ªè qua email n√†y.";
	$headers = ['Content-Type: text/plain; charset=UTF-8'];

	wp_mail($email, $subject, $message, $headers);

	// Hi·ªÉn th·ªã th√¥ng b√°o thay v√¨ chuy·ªÉn h∆∞·ªõng
	echo '<script>alert("‚úÖ Email x√°c minh ƒë√£ ƒë∆∞·ª£c g·ª≠i. Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ c·ªßa b·∫°n."); window.location.href="' . site_url('/') . '";</script>';
	exit;
}

add_action('admin_post_send_verification_link', 'handle_send_verification_link');
add_action('admin_post_nopriv_send_verification_link', 'handle_send_verification_link');

/**
 * H√†m x·ª≠ l√Ω qu√™n m·∫≠t kh·∫©u.
 * - Ki·ªÉm tra d·ªØ li·ªáu t·ª´ form (email).
 * - T√¨m user t∆∞∆°ng ·ª©ng.
 * - T·∫°o token, l∆∞u v√†o user_meta (c√≥ th·ªÉ k√®m th·ªùi gian h·∫øt h·∫°n).
 * - G·ª≠i mail cho user k√®m link reset password.
 */
function handle_forgot_password()
{
	// 1. Ki·ªÉm tra method & action
	if ($_SERVER['REQUEST_METHOD'] !== 'POST' || !isset($_POST['action']) || $_POST['action'] !== 'custom_forgot_password') {
		wp_die('L·ªói b·∫£o m·∫≠t ho·∫∑c sai ph∆∞∆°ng th·ª©c g·ª≠i d·ªØ li·ªáu.');
	}

	// 2. Ki·ªÉm tra nonce
	if (!isset($_POST['_wpnonce']) || !wp_verify_nonce($_POST['_wpnonce'], 'custom_forgot_password')) {
		wp_die('L·ªói b·∫£o m·∫≠t, vui l√≤ng th·ª≠ l·∫°i.');
	}

	// 3. L·∫•y email t·ª´ form
	$email = sanitize_email($_POST['user_email']);
	if (empty($email) || !is_email($email)) {
		wp_die('Email kh√¥ng h·ª£p l·ªá.');
	}

	// 4. T√¨m user c√≥ email n√†y
	$user = get_user_by('email', $email);
	if (!$user) {
		wp_die('Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n v·ªõi email n√†y.');
	}

	// 5. T·∫°o token reset password
	$token = wp_generate_password(20, false); // 20 k√Ω t·ª±, kh√¥ng k√Ω t·ª± ƒë·∫∑c bi·ªát
	update_user_meta($user->ID, 'reset_password_token', $token);

	// L∆∞u th·ªùi gian h·∫øt h·∫°n (v√≠ d·ª• 1 gi·ªù = 3600 gi√¢y)
	update_user_meta($user->ID, 'reset_password_expires', time() + 3600);

	// 6. T·∫°o link reset
	// Ng∆∞·ªùi d√πng s·∫Ω click link => ?action=reset_password&token=...
	$reset_link = add_query_arg(array(
		'action' => 'reset_password',
		'token'  => $token,
	), home_url('/'));

	// 7. G·ª≠i email
	$subject = "Kh√¥i ph·ª•c m·∫≠t kh·∫©u";
	$message = "B·∫°n ƒë√£ y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u.\n"
		. "Nh·∫•n v√†o link sau ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u (c√≥ hi·ªáu l·ª±c 1h):\n"
		. $reset_link . "\n";

	// S·ª≠ d·ª•ng wp_mail ƒë·ªÉ g·ª≠i
	wp_mail($email, $subject, $message);

	// 8. Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß (ho·∫∑c trang kh√°c) k√®m query string
	wp_redirect(home_url('/?reset_password_sent=1'));
	exit;
}

// Hook h√†m x·ª≠ l√Ω
add_action('admin_post_nopriv_custom_forgot_password', 'handle_forgot_password');
add_action('admin_post_custom_forgot_password', 'handle_forgot_password');


function cash_management_admin_menu()
{
	add_menu_page(
		'Qu·∫£n l√Ω n·∫°p ti·ªÅn',    // Ti√™u ƒë·ªÅ trang
		'üí∞ N·∫°p ti·ªÅn',         // T√™n menu sidebar
		'manage_options',      // Quy·ªÅn h·∫°n (ch·ªâ admin)
		'cash-management',     // Slug c·ªßa trang
		'render_cash_management_page', // H√†m hi·ªÉn th·ªã n·ªôi dung
		'dashicons-money',     // Icon menu (WordPress Dashicons)
		20                     // V·ªã tr√≠ hi·ªÉn th·ªã
	);

	// Th√™m submenu "L·ªãch s·ª≠ n·∫°p ti·ªÅn"
	add_submenu_page(
		'cash-management',
		'L·ªãch s·ª≠ n·∫°p ti·ªÅn',
		'üìú L·ªãch s·ª≠',
		'manage_options',
		'cash-history',
		'show_cash_transactions'
	);
}
add_action('admin_menu', 'cash_management_admin_menu');
function add_cash_to_user($user_id, $amount)
{
	global $wpdb;

	$user_id = intval($user_id);
	$amount = intval($amount);

	if ($user_id <= 0 || $amount <= 0) {
		return ['status' => 'error', 'message' => '‚ùå Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn h·ª£p l·ªá!'];
	}

	// L·∫•y s·ªë d∆∞ hi·ªán t·∫°i c·ªßa user
	$current_balance = $wpdb->get_var("SELECT user_balance FROM wp_users WHERE ID = $user_id");

	// N·∫øu user ch∆∞a c√≥ s·ªë d∆∞, ƒë·∫∑t v·ªÅ 0
	if ($current_balance === null) {
		$current_balance = 0;
	}

	// C·∫≠p nh·∫≠t s·ªë d∆∞ m·ªõi
	$new_balance = $current_balance + $amount;
	$wpdb->update(
		'wp_users',
		['user_balance' => $new_balance],
		['ID' => $user_id],
		['%d'],
		['%d']
	);

	// L∆∞u l·ªãch s·ª≠ giao d·ªãch v√†o user_meta
	$transactions = get_user_meta($user_id, 'cash_transactions', true);
	if (!is_array($transactions)) {
		$transactions = [];
	}

	$transactions[] = [
		'amount' => $amount,
		'date'   => current_time('mysql'),
		'admin'  => wp_get_current_user()->user_login
	];

	update_user_meta($user_id, 'cash_transactions', $transactions);

	return ['status' => 'success', 'message' => '‚úÖ ƒê√£ n·∫°p ' . number_format($amount, 0, ',', '.') . ' VND v√†o t√†i kho·∫£n User ID: ' . $user_id];
}


function render_cash_management_page()
{
	if (isset($_POST['submit_cash'])) {
		$result = add_cash_to_user($_POST['user_id'], $_POST['amount']);
		echo '<div class="' . ($result['status'] === 'success' ? 'updated' : 'error') . '"><p>' . $result['message'] . '</p></div>';
	}

?>
	<div class="wrap">
		<h1>üí∞ N·∫°p ti·ªÅn cho User</h1>
		<form method="post">
			<table class="form-table">
				<tr>
					<th><label for="user_id">üîé Ch·ªçn User:</label></th>
					<td>
						<select name="user_id" id="user_id">
							<?php
							$users = get_users();
							foreach ($users as $user) {
								echo '<option value="' . esc_attr($user->ID) . '">' . esc_html($user->user_login) . ' (' . esc_html($user->user_email) . ')</option>';
							}
							?>
						</select>
					</td>
				</tr>
				<tr>
					<th><label for="amount">üí∞ S·ªë ti·ªÅn c·∫ßn n·∫°p:</label></th>
					<td><input type="number" name="amount" id="amount" required min="1"></td>
				</tr>
			</table>
			<p><input type="submit" name="submit_cash" value="N·∫°p ti·ªÅn" class="button button-primary"></p>
		</form>
	</div>
<?php
}


function show_cash_transactions()
{
	echo "<div class='wrap'><h1>üìú L·ªãch s·ª≠ n·∫°p ti·ªÅn</h1>";
	$users = get_users();

	echo "<table class='widefat'><thead><tr><th>User</th><th>S·ªë ti·ªÅn</th><th>Ng√†y</th><th>Admin</th></tr></thead><tbody>";
	foreach ($users as $user) {
		$transactions = get_user_meta($user->ID, 'cash_transactions', true);
		if ($transactions) {
			foreach ($transactions as $txn) {
				echo "<tr>
                    <td>{$user->user_login}</td>
                    <td><strong>" . number_format($txn['amount'], 0, ',', '.') . " VND</strong></td>
                    <td>{$txn['date']}</td>
                    <td>{$txn['admin']}</td>
                </tr>";
			}
		}
	}
	echo "</tbody></table></div>";
}

function get_user_wallet_balance($user_id)
{
	global $wpdb;

	$user_id = intval($user_id);
	if ($user_id <= 0) return 0;

	// L·∫•y s·ªë d∆∞ c·ªßa user t·ª´ b·∫£ng wp_users
	$balance = $wpdb->get_var("SELECT user_balance FROM wp_users WHERE ID = $user_id");

	return $balance ? intval($balance) : 0;
}


function custom_logout()
{
	wp_logout();
	wp_redirect(home_url()); // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß sau khi logout
	exit();
}


function hk_dashboard_content()
{ ?>

	<div class="default-container">
		<h2>TRUY C·∫¨P NHANH</h2>
		<hr>
	</div>

	<div class="icon-container">
		<div class="column">
			<a href="/wp-admin/post-new.php?post_type=gamelist" class="add">Th√™m game m·ªõi</a>
		</div>
		<div class="column">
			<a href="/wp-admin/post-new.php" class="add">Th√™m tin game m·ªõi</a>
		</div>

		<div class="column">
			<a href="/wp-admin/admin.php?page=theme-general-settings
  	" class="add">C√†i ƒë·∫∑t trang ch·ªß</a>
		</div>



	</div>





	<!-- STYLE CSS -->
	<style>
		#wpbody-content #dashboard-widgets #postbox-container-1 {
			width: 100%;
		}

		.default-container {
			display: grid;
			grid-template-columns: 1fr;
			padding: 20px 20px 0px 20px;
			text-align: center;
		}

		.default-container hr {
			height: 3px;
			background: #ebebeb;
			border: none;
			outline: none;
			width: 10%;
			margin: 1em auto;
			position: relative;
		}

		.icon-container {
			display: grid;
			grid-template-columns: 1fr 1fr 1fr 1fr;
			padding: 20px;
			text-align: center;
		}

		@media (max-width: 520px) {
			.icon-container {
				grid-template-columns: none;
				padding: 0px;
			}
		}

		@media (min-width: 521px) and (max-width: 767px) {
			.icon-container {
				grid-template-columns: 1fr 1fr;
				padding: 0px;
			}
		}

		@media (min-width: 768px) and (max-width: 990px) {
			.icon-container {
				grid-template-columns: 1fr 1fr 1fr;
				padding: 0px;
			}
		}

		.icon-container .column {
			background: #fff;
			box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
			color: #000;
			font-family: "Ubuntu", sans-serif;
			font-size: 16px;
			margin: 3%;
			padding: 30px;
			transition: background-color 0.5s ease;
			text-transform: uppercase;
			text-align: center;
			text-decoration: none;
		}

		.icon-container .column a {
			color: #000;
			text-decoration: none;
		}

		.icon-container .column a:before {
			font-family: "dashicons";
			font-size: 34px;
			display: block;
			color: #2681B0;
			margin-bottom: 4px;
		}

		.icon-container .column:hover {
			background: #f9f9f9;
		}

		.icon-container .pages:before {
			content: "\f123";
		}

		.icon-container .posts:before {
			content: "\f109";
		}

		.icon-container .add:before {
			content: "\f133";
		}

		.icon-container .media:before {
			content: "\f104";
		}

		.icon-container .plugin:before {
			content: "\f106";
		}

		.icon-container .theme:before {
			content: "\f100";
		}

		.icon-container .settings:before {
			content: "\f108";
		}
	</style>

<?php }
add_action('wp_dashboard_setup', 'hk_welcome_dashboard');

?>